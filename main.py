#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 7.4
#  in conjunction with Tcl version 8.6
#    Jun 16, 2022 11:25:52 AM CST  platform: Windows NT
import sys
import cv2
import imutils
import main_support
import tkinter as tk
import numpy as np
import tkinter.ttk as ttk
import warnings
from tkinter.constants import *
from pyzbar.pyzbar import decode
from PIL import Image, ImageTk


class Toplevel1:
    def __init__(self, top=None):
        """This class configures and populates the toplevel window.
        top is the toplevel containing window."""
        _bgcolor = "#d9d9d9"  # X11 color: 'gray85'
        _fgcolor = "#000000"  # X11 color: 'black'
        _compcolor = "gray40"  # X11 color: #666666
        _ana1color = "#c3c3c3"  # Closest X11 color: 'gray76'
        _ana2color = "beige"  # X11 color: #f5f5dc
        _tabfg1 = "black"
        _tabfg2 = "black"
        _tabbg1 = "grey75"
        _tabbg2 = "grey89"
        _bgmode = "light"

        top.geometry("1280x800+235+88")
        top.minsize(120, 1)
        top.maxsize(1280, 800)
        top.resizable(1, 1)
        top.title("QRCode Scanner")
        top.configure(background="#d9d9d9")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="black")

        self.top = top
        self.che46 = tk.IntVar()
        self.che48 = tk.IntVar()
        self.che53 = tk.IntVar()
        self.che54 = tk.IntVar()
        self.che55 = tk.IntVar()
        self.che56 = tk.IntVar()
        self.che57 = tk.IntVar()

        self.Checkbutton1 = tk.Checkbutton(self.top)
        self.Checkbutton1.place(relx=0.055, rely=0.075, relheight=0.031, relwidth=0.048)
        self.Checkbutton1.configure(activebackground="beige")
        self.Checkbutton1.configure(activeforeground="#000000")
        self.Checkbutton1.configure(anchor="w")
        self.Checkbutton1.configure(background="#d9d9d9")
        self.Checkbutton1.configure(compound="left")
        self.Checkbutton1.configure(disabledforeground="#a3a3a3")
        self.Checkbutton1.configure(foreground="#000000")
        self.Checkbutton1.configure(highlightbackground="#d9d9d9")
        self.Checkbutton1.configure(highlightcolor="black")
        self.Checkbutton1.configure(justify="left")
        self.Checkbutton1.configure(text="""dwg""")
        self.Checkbutton1.configure(variable=self.che46)

        self.Checkbutton2 = tk.Checkbutton(self.top)
        self.Checkbutton2.place(relx=0.095, rely=0.075, relheight=0.031, relwidth=0.051)
        self.Checkbutton2.configure(activebackground="beige")
        self.Checkbutton2.configure(activeforeground="#000000")
        self.Checkbutton2.configure(anchor="w")
        self.Checkbutton2.configure(background="#d9d9d9")
        self.Checkbutton2.configure(compound="left")
        self.Checkbutton2.configure(disabledforeground="#a3a3a3")
        self.Checkbutton2.configure(foreground="#000000")
        self.Checkbutton2.configure(highlightbackground="#d9d9d9")
        self.Checkbutton2.configure(highlightcolor="black")
        self.Checkbutton2.configure(justify="left")
        self.Checkbutton2.configure(text="""bak""")
        self.Checkbutton2.configure(variable=self.che48)

        self.Checkbutton3 = tk.Checkbutton(self.top)
        self.Checkbutton3.place(relx=0.133, rely=0.075, relheight=0.031, relwidth=0.051)
        self.Checkbutton3.configure(activebackground="beige")
        self.Checkbutton3.configure(activeforeground="#000000")
        self.Checkbutton3.configure(anchor="w")
        self.Checkbutton3.configure(background="#d9d9d9")
        self.Checkbutton3.configure(compound="left")
        self.Checkbutton3.configure(disabledforeground="#a3a3a3")
        self.Checkbutton3.configure(foreground="#000000")
        self.Checkbutton3.configure(highlightbackground="#d9d9d9")
        self.Checkbutton3.configure(highlightcolor="black")
        self.Checkbutton3.configure(justify="left")
        self.Checkbutton3.configure(text="""step""")
        self.Checkbutton3.configure(variable=self.che53)

        self.Checkbutton4 = tk.Checkbutton(self.top)
        self.Checkbutton4.place(relx=0.172, rely=0.075, relheight=0.031, relwidth=0.057)
        self.Checkbutton4.configure(activebackground="beige")
        self.Checkbutton4.configure(activeforeground="#000000")
        self.Checkbutton4.configure(anchor="w")
        self.Checkbutton4.configure(background="#d9d9d9")
        self.Checkbutton4.configure(compound="left")
        self.Checkbutton4.configure(disabledforeground="#a3a3a3")
        self.Checkbutton4.configure(foreground="#000000")
        self.Checkbutton4.configure(highlightbackground="#d9d9d9")
        self.Checkbutton4.configure(highlightcolor="black")
        self.Checkbutton4.configure(justify="left")
        self.Checkbutton4.configure(text="""SLDASM""")
        self.Checkbutton4.configure(variable=self.che54)

        self.Checkbutton5 = tk.Checkbutton(self.top)
        self.Checkbutton5.place(relx=0.227, rely=0.075, relheight=0.031, relwidth=0.057)
        self.Checkbutton5.configure(activebackground="beige")
        self.Checkbutton5.configure(activeforeground="#000000")
        self.Checkbutton5.configure(anchor="w")
        self.Checkbutton5.configure(background="#d9d9d9")
        self.Checkbutton5.configure(compound="left")
        self.Checkbutton5.configure(disabledforeground="#a3a3a3")
        self.Checkbutton5.configure(foreground="#000000")
        self.Checkbutton5.configure(highlightbackground="#d9d9d9")
        self.Checkbutton5.configure(highlightcolor="black")
        self.Checkbutton5.configure(justify="left")
        self.Checkbutton5.configure(text="""SLDPRT""")
        self.Checkbutton5.configure(variable=self.che55)

        self.Checkbutton6 = tk.Checkbutton(self.top)
        self.Checkbutton6.place(relx=0.055, rely=0.113, relheight=0.031, relwidth=0.052)
        self.Checkbutton6.configure(activebackground="beige")
        self.Checkbutton6.configure(activeforeground="#000000")
        self.Checkbutton6.configure(anchor="w")
        self.Checkbutton6.configure(background="#d9d9d9")
        self.Checkbutton6.configure(compound="left")
        self.Checkbutton6.configure(disabledforeground="#a3a3a3")
        self.Checkbutton6.configure(foreground="#000000")
        self.Checkbutton6.configure(highlightbackground="#d9d9d9")
        self.Checkbutton6.configure(highlightcolor="black")
        self.Checkbutton6.configure(justify="left")
        self.Checkbutton6.configure(text="""mp4""")
        self.Checkbutton6.configure(variable=self.che56)

        self.Checkbutton7 = tk.Checkbutton(self.top)
        self.Checkbutton7.place(relx=0.055, rely=0.15, relheight=0.031, relwidth=0.048)
        self.Checkbutton7.configure(activebackground="beige")
        self.Checkbutton7.configure(activeforeground="#000000")
        self.Checkbutton7.configure(anchor="w")
        self.Checkbutton7.configure(background="#d9d9d9")
        self.Checkbutton7.configure(compound="left")
        self.Checkbutton7.configure(disabledforeground="#a3a3a3")
        self.Checkbutton7.configure(foreground="#000000")
        self.Checkbutton7.configure(highlightbackground="#d9d9d9")
        self.Checkbutton7.configure(highlightcolor="black")
        self.Checkbutton7.configure(justify="left")
        self.Checkbutton7.configure(text="""pdf""")
        self.Checkbutton7.configure(variable=self.che57)

        self.Labelframe1 = tk.LabelFrame(self.top)
        self.Labelframe1.place(relx=0.055, rely=0.275, relheight=0.664, relwidth=0.535)
        self.Labelframe1.configure(relief="groove")
        self.Labelframe1.configure(font="-family {微軟正黑體} -size 14 -weight bold")
        self.Labelframe1.configure(foreground="black")
        self.Labelframe1.configure(text="""二維條碼""")
        self.Labelframe1.configure(background="#d9d9d9")
        self.Labelframe1.configure(highlightbackground="#d9d9d9")
        self.Labelframe1.configure(highlightcolor="black")

        self.Label1 = tk.Label(self.Labelframe1)
        self.Label1.place(
            relx=0.029, rely=0.056, height=480, width=640, bordermode="ignore"
        )
        self.Label1.configure(activebackground="#f9f9f9")
        self.Label1.configure(activeforeground="black")
        self.Label1.configure(anchor="w")
        self.Label1.configure(background="#d9d9d9")
        self.Label1.configure(compound="left")
        self.Label1.configure(disabledforeground="#a3a3a3")
        self.Label1.configure(foreground="#000000")
        self.Label1.configure(highlightbackground="#d9d9d9")
        self.Label1.configure(highlightcolor="black")
        self.Label1.configure(relief="ridge")
        self.Label1.configure(text="""""")

        self.Button1 = tk.Button(self.top)
        self.Button1.place(relx=0.055, rely=0.2, height=34, width=128)
        self.Button1.configure(activebackground="beige")
        self.Button1.configure(activeforeground="#000000")
        self.Button1.configure(background="#d9d9d9")
        self.Button1.configure(compound="left")
        self.Button1.configure(disabledforeground="#a3a3a3")
        self.Button1.configure(foreground="#000000")
        self.Button1.configure(highlightbackground="#d9d9d9")
        self.Button1.configure(highlightcolor="black")
        self.Button1.configure(pady="0")
        self.Button1.configure(text="""Set Default""")

        self.Button2 = tk.Button(self.top)
        self.Button2.place(relx=0.641, rely=0.075, height=64, width=118)
        self.Button2.configure(activebackground="beige")
        self.Button2.configure(activeforeground="#000000")
        self.Button2.configure(background="#0080ff")
        self.Button2.configure(compound="left")
        self.Button2.configure(disabledforeground="#a3a3a3")
        self.Button2.configure(font="-family {微軟正黑體} -size 15 -weight bold")
        self.Button2.configure(foreground="#000000")
        self.Button2.configure(highlightbackground="#d9d9d9")
        self.Button2.configure(highlightcolor="black")
        self.Button2.configure(pady="0")
        self.Button2.configure(text="""Start Scan""")

        self.Button3 = tk.Button(self.top)
        self.Button3.place(relx=0.742, rely=0.075, height=64, width=118)
        self.Button3.configure(activebackground="beige")
        self.Button3.configure(activeforeground="#000000")
        self.Button3.configure(background="#e1031e")
        self.Button3.configure(compound="left")
        self.Button3.configure(disabledforeground="#a3a3a3")
        self.Button3.configure(font="-family {微軟正黑體} -size 16 -weight bold")
        self.Button3.configure(foreground="#000000")
        self.Button3.configure(highlightbackground="#d9d9d9")
        self.Button3.configure(highlightcolor="black")
        self.Button3.configure(pady="0")
        self.Button3.configure(text="""Stop Scan""")

        self.Text1 = tk.Text(self.top)
        self.Text1.place(relx=0.609, rely=0.438, relheight=0.059, relwidth=0.348)

        self.Text1.configure(background="white")
        self.Text1.configure(font="-family {Microsoft JhengHei UI} -size 12")
        self.Text1.configure(foreground="black")
        self.Text1.configure(highlightbackground="#d9d9d9")
        self.Text1.configure(highlightcolor="black")
        self.Text1.configure(insertbackground="black")
        self.Text1.configure(selectbackground="#c4c4c4")
        self.Text1.configure(selectforeground="black")
        self.Text1.configure(wrap="word")

        self.Label2 = tk.Label(self.top)
        self.Label2.place(relx=0.609, rely=0.388, height=32, width=87)
        self.Label2.configure(activebackground="#f9f9f9")
        self.Label2.configure(anchor="w")
        self.Label2.configure(background="#d9d9d9")
        self.Label2.configure(compound="left")
        self.Label2.configure(disabledforeground="#a3a3a3")
        self.Label2.configure(
            font="-family {Microsoft JhengHei UI} -size 14 -weight bold"
        )
        self.Label2.configure(foreground="#000000")
        self.Label2.configure(highlightbackground="#d9d9d9")
        self.Label2.configure(highlightcolor="black")
        self.Label2.configure(text="""檔案路徑""")

        # bind events
        self.Button1.configure(command=self.button1_event)
        self.Button2.configure(command=self.button2_event)
        self.Button3.configure(command=self.button3_event)
        self.top.bind('<Key>', self.key_press_event)

    # ----------------------------------- 讀取QRCode -----------------------------------
    def load_cam(self):
        global cam
        if cam is not None:
            ret, frame = cam.read()
            if ret:
                frame = imutils.resize(frame, width=640, height=480)
                frame = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)
                frame = cv2.flip(frame, 1)

                # read qr code
                for barcode in decode(frame):
                    result = barcode.data.decode("utf-8")

                    # set text label
                    self.Text1.delete(1.0, tk.END)
                    self.Text1.insert(tk.END, result)
                    print(result)
                    pts = np.array([barcode.polygon], np.int32)
                    pts = pts.reshape((-1, 1, 2))
                    cv2.polylines(frame, [pts], True, (0, 255, 0), 5)
                    cv2.putText(frame, result, (barcode.rect[0], barcode.rect[1]), cv2.FONT_HERSHEY_SIMPLEX, 0.9,
                                (0, 255, 0), 2)

                img = Image.fromarray(frame)
                imgtk = ImageTk.PhotoImage(image=img)
                self.Label1.configure(image=imgtk)
                self.Label1.image = imgtk
                self.Label1.after(10, self.load_cam)

    def iniciar(self):
        global cam
        cam = cv2.VideoCapture(0, cv2.CAP_DSHOW)
        self.load_cam()

    # ----------------------------------- Button Event -----------------------------------
    def button1_event(self):  # set default
        che1 = self.che46.get()
        print(che1)

    def button2_event(self):  # start scan
        self.iniciar()
        self.Button2.configure(state='disabled')
        self.Button3.configure(state='normal')
        self.flag_83 = True
        self.flag_81 = False

    def button3_event(self):  # stop scan
        cam.release()
        self.Button2.configure(state='normal')
        self.Button3.configure(state='disabled')
        self.flag_81 = True
        self.flag_83 = False

    def key_press_event(self, event):
        if event.keycode == 83 and self.flag_83 == False:
            self.iniciar()
            self.flag_83 = True
            self.flag_81 = False
            self.Button2.configure(state='disabled')
            self.Button3.configure(state='normal')

        if event.keycode == 81 and self.flag_81 == False:
            cam.release()
            self.flag_81 = True
            self.flag_83 = False
            self.Button2.configure(state='normal')
            self.Button3.configure(state='disabled')


def start_up():
    main_support.main()


if __name__ == "__main__":
    main_support.main()
    warnings.filterwarnings("ignore")
